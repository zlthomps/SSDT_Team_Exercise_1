/*
Deployment script for SSDT_Team_Exercise_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SSDT_Team_Exercise_1"
:setvar DefaultFilePrefix "SSDT_Team_Exercise_1"
:setvar DefaultDataPath "C:\Users\zthompson\AppData\Local\Microsoft\VisualStudio\SSDT\"
:setvar DefaultLogPath "C:\Users\zthompson\AppData\Local\Microsoft\VisualStudio\SSDT\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'The following operation was generated from a refactoring log file a7be8ed6-617b-407a-b64c-f79f88c021e2';

PRINT N'Rename [Person].[Person].[FName] to FirstName';


GO
EXECUTE sp_rename @objname = N'[Person].[Person].[FName]', @newname = N'FirstName', @objtype = N'COLUMN';


GO
PRINT N'The following operation was generated from a refactoring log file e59fd519-2d05-400a-af98-67f016780c9e';

PRINT N'Rename [Person].[Person].[LName] to LastName';


GO
EXECUTE sp_rename @objname = N'[Person].[Person].[LName]', @newname = N'LastName', @objtype = N'COLUMN';


GO
PRINT N'Dropping DF__Salespers__isAct__6E01572D...';


GO
ALTER TABLE [Person].[Salesperson] DROP CONSTRAINT [DF__Salespers__isAct__6E01572D];


GO
PRINT N'Creating [dbo].[Country]...';


GO
CREATE TABLE [dbo].[Country] (
    [Id]          UNIQUEIDENTIFIER NOT NULL,
    [CountryCode] NVARCHAR (3)     NOT NULL,
    [Name]        NVARCHAR (50)    NOT NULL,
    [CreatedDate] DATETIME         NOT NULL,
    CONSTRAINT [PK_Country_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[StateProvince]...';


GO
CREATE TABLE [dbo].[StateProvince] (
    [Id]                UNIQUEIDENTIFIER NOT NULL,
    [StateProvinceCode] NCHAR (3)        NOT NULL,
    [CountryId]         UNIQUEIDENTIFIER NOT NULL,
    [Name]              NVARCHAR (50)    NOT NULL,
    [CreatedDate]       DATETIME         NOT NULL,
    CONSTRAINT [PK_StateProvince_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint on [Person].[Salesperson]....';


GO
ALTER TABLE [Person].[Salesperson]
    ADD DEFAULT CAST(1 AS BIT) FOR [isActive];


GO
PRINT N'Creating Default Constraint on [dbo].[Country]....';


GO
ALTER TABLE [dbo].[Country]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [dbo].[Country]....';


GO
ALTER TABLE [dbo].[Country]
    ADD DEFAULT GETUTCDATE() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint on [dbo].[StateProvince]....';


GO
ALTER TABLE [dbo].[StateProvince]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [dbo].[StateProvince]....';


GO
ALTER TABLE [dbo].[StateProvince]
    ADD DEFAULT GETUTCDATE() FOR [CreatedDate];


GO
PRINT N'Creating FK_StateProvince_CountryId_Country_Id...';


GO
ALTER TABLE [dbo].[StateProvince] WITH NOCHECK
    ADD CONSTRAINT [FK_StateProvince_CountryId_Country_Id] FOREIGN KEY ([CountryId]) REFERENCES [dbo].[Country] ([Id]);


GO
PRINT N'Altering [Person].[vw_Customers]...';


GO
ALTER VIEW [Person].[vw_Customers]
	AS

SELECT  Person.[FirstName] AS FirstName ,
        Person.[LastName] AS LastName ,
        ISNULL(Email.EmailAddress,N'') AS Email,
		ISNULL(Phone.PhoneNumber,N'') AS Phone,
		ISNULL(Address.Street + SPACE(1) + Address.City + N',' + Address.StateProvince + SPACE(1) + Address.PostalCode,N'') AS [Address]
FROM    Person.Person AS Person
        LEFT OUTER JOIN Person.Customer AS Customer ON Customer.PersonId = Person.Id
        LEFT OUTER JOIN Person.CustomerEmail AS Email ON Email.CustomerId = Customer.Id
		LEFT OUTER JOIN person.CustomerAddress AS [Address] ON Address.CustomerId = Customer.Id
		LEFT OUTER JOIN Person.CustomerPhone AS Phone ON Phone.CustomerId = Customer.Id
GO
PRINT N'Altering [Sales].[vw_CustomersOpportunities]...';


GO
ALTER VIEW [Sales].[vw_CustomersOpportunities]
	AS 
	
	SELECT 
		Person.[FirstName],
		Person.[LastName],
		OppType.Name AS OppType,
		Vehic.Year AS VehicleYear,
		Make.Name AS Make,
		Model.Name AS Model,
		opps.CreatedDate AS OppOpen
	FROM Person.Person AS Person
	INNER JOIN Person.Customer AS Cust
		ON Cust.PersonId = Person.Id
	INNER JOIN Sales.Opportunity AS Opps
		ON Opps.CustomerId = Cust.Id
	INNER JOIN Sales.OpportunityType AS OppType
		ON OppType.Id = Opps.OpportunityTypeId
	INNER JOIN Inventory.Vehicle AS Vehic
		ON Vehic.Id = Opps.VehicleId
	INNER JOIN Inventory.Make AS Make
		ON Make.Id = Vehic.MakeId
	INNER JOIN Inventory.Model AS Model
		ON Model.Id = Vehic.ModelId
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a7be8ed6-617b-407a-b64c-f79f88c021e2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a7be8ed6-617b-407a-b64c-f79f88c021e2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e59fd519-2d05-400a-af98-67f016780c9e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e59fd519-2d05-400a-af98-67f016780c9e')

GO

GO


IF ( SELECT COUNT(*)
     FROM   Inventory.Make
   ) = 0
    BEGIN
        
        INSERT  INTO Inventory.Make
                ( Name )
        VALUES  ( N'Ferrari' -- Name - nvarchar(50)
                  ),
                ( N'Lotus' -- Name - nvarchar(50)
                  ),
                ( N'Mitsubishi'-- Name - nvarchar(50)
                  )

    END 
GO

IF ( SELECT COUNT(*)
     FROM   Inventory.Model
   ) = 0
    BEGIN
        
        INSERT  INTO Inventory.Model
                ( Name )
        VALUES  ( N'Lancer' ),
                ( N'Lancer Evolution' ),
                ( N'599 GTO' ),
                ( N'Exige' ),
                ( N'Elise' ),
                ( N'Italia' ),
                ( N'Enzo' ),
                ( N'Outlander' )
    END 


GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[StateProvince] WITH CHECK CHECK CONSTRAINT [FK_StateProvince_CountryId_Country_Id];


GO
PRINT N'Update complete.';


GO
