/*
Deployment script for SSDT_Team_Exercise_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar SingleSignOn "SingleSignOn"
:setvar DatabaseName "SSDT_Team_Exercise_1"
:setvar DefaultFilePrefix "SSDT_Team_Exercise_1"
:setvar DefaultDataPath "C:\Program Files (x86)\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files (x86)\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping unnamed constraint on [Person].[Salesperson]...';


GO
ALTER TABLE [Person].[Salesperson] DROP CONSTRAINT [DF__Salespers__isAct__14270015];


GO
PRINT N'Creating [Archive]...';


GO
CREATE SCHEMA [Archive]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Archive].[CustomerNoteHistory]...';


GO
CREATE TABLE [Archive].[CustomerNoteHistory] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [CustomerId]   UNIQUEIDENTIFIER NOT NULL,
    [Note]         NVARCHAR (MAX)   NULL,
    [CreatedDate]  DATETIME         NOT NULL,
    [ModifiedDate] DATETIME         NOT NULL,
    CONSTRAINT [PK_CustomerNoteHistory_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Person].[CustomerNote]...';


GO
CREATE TABLE [Person].[CustomerNote] (
    [Id]           UNIQUEIDENTIFIER NOT NULL,
    [CustomerId]   UNIQUEIDENTIFIER NOT NULL,
    [Note]         NVARCHAR (MAX)   NULL,
    [CreatedDate]  DATETIME         NOT NULL,
    [ModifiedDate] DATETIME         NOT NULL,
    CONSTRAINT [PK_CustomerNote_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [Person].[Salesperson]...';


GO
ALTER TABLE [Person].[Salesperson]
    ADD DEFAULT CAST(1 AS BIT) FOR [isActive];


GO
PRINT N'Creating unnamed constraint on [Archive].[CustomerNoteHistory]...';


GO
ALTER TABLE [Archive].[CustomerNoteHistory]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating unnamed constraint on [Person].[CustomerNote]...';


GO
ALTER TABLE [Person].[CustomerNote]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating [Archive].[FK_CustomerNoteHistory_CustomerId_Customer_Id]...';


GO
ALTER TABLE [Archive].[CustomerNoteHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_CustomerNoteHistory_CustomerId_Customer_Id] FOREIGN KEY ([CustomerId]) REFERENCES [Person].[Customer] ([Id]);


GO
PRINT N'Creating [Person].[FK_CustomerNote_CustomerId_Customer_Id]...';


GO
ALTER TABLE [Person].[CustomerNote] WITH NOCHECK
    ADD CONSTRAINT [FK_CustomerNote_CustomerId_Customer_Id] FOREIGN KEY ([CustomerId]) REFERENCES [Person].[Customer] ([Id]);


GO
PRINT N'Altering [Inventory].[vw_Vehicles]...';


GO
ALTER VIEW [Inventory].[vw_Vehicles]
	AS 

	SELECT 
		v.Id AS VehicleId,
		m.Name AS Make,
		mo.Name AS Model
	FROM Inventory.Vehicle AS v
	LEFT OUTER JOIN Inventory.Make AS m
		ON m.Id = v.MakeId
	LEFT OUTER JOIN Inventory.Model AS mo
		ON mo.Id = v.ModelId
GO
PRINT N'Creating [Inventory].[vw_SelectVehicles]...';


GO
CREATE VIEW [Inventory].[vw_SelectVehicles]
	AS 
	
	SELECT 
		v.Id AS VehicleId,
		m.Name AS Make,
		mo.Name AS Model,
		c.Name AS Color
	FROM Inventory.Vehicle AS v
	LEFT OUTER JOIN Inventory.Make AS m
		ON m.Id = v.MakeId
	LEFT OUTER JOIN Inventory.Model AS mo
		ON mo.Id = v.ModelId
	LEFT OUTER JOIN Inventory.Color AS c
		ON c.Id = v.ColorId
GO
PRINT N'Creating [Person].[usp_UpdateSalespersonLogin]...';


GO
CREATE PROCEDURE Person.usp_UpdateSalespersonLogin
    @NewLoginId UNIQUEIDENTIFIER ,
    @SalespersonId UNIQUEIDENTIFIER
AS
    UPDATE  Person.Salesperson
    SET     LoginId = @NewLoginId
    WHERE   Id = @SalespersonId
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [Archive].[CustomerNoteHistory] WITH CHECK CHECK CONSTRAINT [FK_CustomerNoteHistory_CustomerId_Customer_Id];

ALTER TABLE [Person].[CustomerNote] WITH CHECK CHECK CONSTRAINT [FK_CustomerNote_CustomerId_Customer_Id];


GO
PRINT N'Update complete.';


GO
