/*
Deployment script for SSDT_Team_Exercise_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SSDT_Team_Exercise_1"
:setvar DefaultFilePrefix "SSDT_Team_Exercise_1"
:setvar DefaultDataPath "C:\Users\zthompson\AppData\Local\Microsoft\VisualStudio\SSDT\"
:setvar DefaultLogPath "C:\Users\zthompson\AppData\Local\Microsoft\VisualStudio\SSDT\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [Person].[CustomerAddress].[Country] is being dropped, data loss could occur.

The column [Person].[CustomerAddress].[StateProvince] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [Person].[CustomerAddress])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping DF__Salespers__isAct__2739D489...';


GO
ALTER TABLE [Person].[Salesperson] DROP CONSTRAINT [DF__Salespers__isAct__2739D489];


GO
PRINT N'Altering [Person].[CustomerAddress]...';


GO
ALTER TABLE [Person].[CustomerAddress] DROP COLUMN [Country], COLUMN [StateProvince];


GO
PRINT N'Creating Default Constraint on [Person].[Salesperson]....';


GO
ALTER TABLE [Person].[Salesperson]
    ADD DEFAULT CAST(1 AS BIT) FOR [isActive];


GO
PRINT N'Altering [Person].[vw_Customers]...';


GO
ALTER VIEW [Person].[vw_Customers]
	AS

SELECT  Person.[FirstName] AS FirstName ,
        Person.[LastName] AS LastName ,
        ISNULL(Email.EmailAddress,N'') AS Email,
		ISNULL(Phone.PhoneNumber,N'') AS Phone,
		ISNULL(Address.Street + SPACE(1) + Address.City + N',' + StateProv.Name + SPACE(1) + Address.PostalCode,N'') AS [Address]
FROM    Person.Person AS Person
        LEFT OUTER JOIN Person.Customer AS Customer ON Customer.PersonId = Person.Id
        LEFT OUTER JOIN Person.CustomerEmail AS Email ON Email.CustomerId = Customer.Id
		LEFT OUTER JOIN person.CustomerAddress AS [Address] ON Address.CustomerId = Customer.Id
		LEFT OUTER JOIN Person.CustomerPhone AS Phone ON Phone.CustomerId = Customer.Id
		LEFT OUTER JOIN dbo.StateProvince AS StateProv ON [Address].StateProvinceId = StateProv.Id
GO


IF ( SELECT COUNT(*)
     FROM   Inventory.Make
   ) = 0
    BEGIN
	
			DECLARE @idpk UNIQUEIDENTIFIER = NEWID()

			INSERT INTO Inventory.Make 
					( Id,Name ) 
			VALUES  ( 
						@idpk,
						N'Mitsubishi'-- Name - nvarchar(50)
					  )

			INSERT INTO Inventory.Model
					( 
					  Name ,
					  MakeId
					)
			VALUES  ( 
					  N'Lancer Evolution GSR' , -- Name - nvarchar(50)
					  @idpk -- MakeId - uniqueidentifier
					),
					( 
					  N'Outlander' , -- Name - nvarchar(50)
					  @idpk -- MakeId - uniqueidentifier
					),
					( 
					  N'Lancer OZ Edition' , -- Name - nvarchar(50)
					  @idpk -- MakeId - uniqueidentifier
					)

			SET @idpk = NEWID()

			INSERT INTO Inventory.Make 
					( Id,Name ) 
			VALUES  ( 
						@idpk,
						N'Ferrari'-- Name - nvarchar(50)
					  )

			INSERT INTO Inventory.Model
					( 
					  Name ,
					  MakeId
					)
			VALUES  ( 
					  N'599 GTO' , -- Name - nvarchar(50)
					  @idpk -- MakeId - uniqueidentifier
					),
					( 
					  N'Italia' , -- Name - nvarchar(50)
					  @idpk -- MakeId - uniqueidentifier
					),
					( 
					  N'Enzo' , -- Name - nvarchar(50)
					  @idpk -- MakeId - uniqueidentifier
					)

			SET @idpk = NEWID()

			INSERT INTO Inventory.Make 
					( Id,Name ) 
			VALUES  ( 
						@idpk,
						N'Lotus'-- Name - nvarchar(50)
					  )

			INSERT INTO Inventory.Model
					( 
					  Name ,
					  MakeId
					)
			VALUES  ( 
					  N'Exige',-- Name - nvarchar(50)
					  @idpk -- MakeId - uniqueidentifier
					),
					( 
					  N'Elise' , -- Name - nvarchar(50)
					  @idpk -- MakeId - uniqueidentifier
					)


    END 

GO

--Update Script
--Refactor CustomerAddress

IF EXISTS ( SELECT  *
            FROM    sys.columns AS sc
                    INNER JOIN sys.tables AS st ON sc.OBJECT_ID = st.object_id
            WHERE   sc.name = 'StateProvinceId'
                    AND st.name = 'CustomerAddress' )
    BEGIN

        UPDATE  Person.CustomerAddress
        SET     StateProvinceId = sp.Id
        FROM    dbo.StateProvince AS sp
                INNER JOIN dbo.Country AS c ON c.Id = sp.CountryId
                INNER JOIN person.CustomerAddress AS ca ON ca.Country = c.Name
                                                           AND sp.Name = ca.StateProvince
        WHERE   ca.StateProvinceId IS NULL

    END

GO



GO

GO
PRINT N'Update complete.';


GO
