/*
Deployment script for SSDT_Team_Exercise_1

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SSDT_Team_Exercise_1"
:setvar DefaultFilePrefix "SSDT_Team_Exercise_1"
:setvar DefaultDataPath "C:\Program Files (x86)\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files (x86)\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [Inventory]...';


GO
CREATE SCHEMA [Inventory]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Person]...';


GO
CREATE SCHEMA [Person]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Sales]...';


GO
CREATE SCHEMA [Sales]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [Inventory].[Vehicle]...';


GO
CREATE TABLE [Inventory].[Vehicle] (
    [Id]      UNIQUEIDENTIFIER NOT NULL,
    [MakeId]  UNIQUEIDENTIFIER NOT NULL,
    [ModelId] UNIQUEIDENTIFIER NOT NULL,
    [Year]    SMALLINT         NOT NULL,
    [ColorId] UNIQUEIDENTIFIER NOT NULL,
    [Price]   MONEY            NOT NULL,
    CONSTRAINT [PK_Vehicle_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Inventory].[Color]...';


GO
CREATE TABLE [Inventory].[Color] (
    [Id]          UNIQUEIDENTIFIER NOT NULL,
    [Name]        NVARCHAR (50)    NOT NULL,
    [CreatedDate] DATETIME         NOT NULL,
    CONSTRAINT [PK_Color_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Inventory].[Model]...';


GO
CREATE TABLE [Inventory].[Model] (
    [Id]          UNIQUEIDENTIFIER NOT NULL,
    [Name]        NVARCHAR (50)    NOT NULL,
    [CreatedDate] DATETIME         NOT NULL,
    CONSTRAINT [PK_Model_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Inventory].[Make]...';


GO
CREATE TABLE [Inventory].[Make] (
    [Id]          UNIQUEIDENTIFIER NOT NULL,
    [Name]        NVARCHAR (50)    NOT NULL,
    [CreatedDate] DATETIME         NOT NULL,
    CONSTRAINT [PK_Make_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Person].[Customer]...';


GO
CREATE TABLE [Person].[Customer] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [PersonId]      UNIQUEIDENTIFIER NOT NULL,
    [SalespersonId] UNIQUEIDENTIFIER NULL,
    [CreatedDate]   DATE             NOT NULL,
    CONSTRAINT [PK_Customer_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Person].[Salesperson]...';


GO
CREATE TABLE [Person].[Salesperson] (
    [Id]        UNIQUEIDENTIFIER NOT NULL,
    [PersonId]  UNIQUEIDENTIFIER NOT NULL,
    [HiredDate] DATE             NULL,
    [isActive]  BIT              NULL,
    CONSTRAINT [PK_Salesperson_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Person].[Person]...';


GO
CREATE TABLE [Person].[Person] (
    [Id]        UNIQUEIDENTIFIER NOT NULL,
    [IndexId]   BIGINT           IDENTITY (1, 1) NOT NULL,
    [FName]     NVARCHAR (50)    NOT NULL,
    [LName]     NVARCHAR (50)    NULL,
    [Birthdate] DATE             NULL,
    CONSTRAINT [PK_Person_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Person].[Person].[IX_Person_IndexId]...';


GO
CREATE NONCLUSTERED INDEX [IX_Person_IndexId]
    ON [Person].[Person]([IndexId] ASC);


GO
PRINT N'Creating [Sales].[Opportunity]...';


GO
CREATE TABLE [Sales].[Opportunity] (
    [Id]                UNIQUEIDENTIFIER NOT NULL,
    [CustomerId]        UNIQUEIDENTIFIER NOT NULL,
    [VehicleId]         UNIQUEIDENTIFIER NOT NULL,
    [OpportunityTypeId] UNIQUEIDENTIFIER NOT NULL,
    [CreatedDate]       DATETIME         NOT NULL,
    CONSTRAINT [PK_Opportunity_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [Sales].[OpportunityType]...';


GO
CREATE TABLE [Sales].[OpportunityType] (
    [Id]   UNIQUEIDENTIFIER NOT NULL,
    [Name] NVARCHAR (50)    NOT NULL,
    CONSTRAINT [PK_OpportunityType_Id] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Default Constraint on [Inventory].[Vehicle]....';


GO
ALTER TABLE [Inventory].[Vehicle]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [Inventory].[Color]....';


GO
ALTER TABLE [Inventory].[Color]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [Inventory].[Color]....';


GO
ALTER TABLE [Inventory].[Color]
    ADD DEFAULT GETUTCDATE() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint on [Inventory].[Model]....';


GO
ALTER TABLE [Inventory].[Model]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [Inventory].[Model]....';


GO
ALTER TABLE [Inventory].[Model]
    ADD DEFAULT GETUTCDATE() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint on [Inventory].[Make]....';


GO
ALTER TABLE [Inventory].[Make]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [Inventory].[Make]....';


GO
ALTER TABLE [Inventory].[Make]
    ADD DEFAULT GETUTCDATE() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint on [Person].[Customer]....';


GO
ALTER TABLE [Person].[Customer]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [Person].[Customer]....';


GO
ALTER TABLE [Person].[Customer]
    ADD DEFAULT CONVERT(DATE,GETUTCDATE()) FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint on [Person].[Salesperson]....';


GO
ALTER TABLE [Person].[Salesperson]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [Person].[Salesperson]....';


GO
ALTER TABLE [Person].[Salesperson]
    ADD DEFAULT CONVERT (DATE, GETUTCDATE()) FOR [HiredDate];


GO
PRINT N'Creating Default Constraint on [Person].[Salesperson]....';


GO
ALTER TABLE [Person].[Salesperson]
    ADD DEFAULT CAST(1 AS BIT) FOR [isActive];


GO
PRINT N'Creating Default Constraint on [Person].[Person]....';


GO
ALTER TABLE [Person].[Person]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [Sales].[Opportunity]....';


GO
ALTER TABLE [Sales].[Opportunity]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating Default Constraint on [Sales].[Opportunity]....';


GO
ALTER TABLE [Sales].[Opportunity]
    ADD DEFAULT GETUTCDATE() FOR [CreatedDate];


GO
PRINT N'Creating Default Constraint on [Sales].[OpportunityType]....';


GO
ALTER TABLE [Sales].[OpportunityType]
    ADD DEFAULT NEWID() FOR [Id];


GO
PRINT N'Creating FK_Vehicle_MakeId_Make_Id...';


GO
ALTER TABLE [Inventory].[Vehicle]
    ADD CONSTRAINT [FK_Vehicle_MakeId_Make_Id] FOREIGN KEY ([MakeId]) REFERENCES [Inventory].[Make] ([Id]);


GO
PRINT N'Creating FK_Vehicle_ModelId_Model_Id...';


GO
ALTER TABLE [Inventory].[Vehicle]
    ADD CONSTRAINT [FK_Vehicle_ModelId_Model_Id] FOREIGN KEY ([ModelId]) REFERENCES [Inventory].[Model] ([Id]);


GO
PRINT N'Creating FK_Vehicle_ColorId_Color_Id...';


GO
ALTER TABLE [Inventory].[Vehicle]
    ADD CONSTRAINT [FK_Vehicle_ColorId_Color_Id] FOREIGN KEY ([ColorId]) REFERENCES [Inventory].[Color] ([Id]);


GO
PRINT N'Creating FK_Customer_PersonId_Person_Id...';


GO
ALTER TABLE [Person].[Customer]
    ADD CONSTRAINT [FK_Customer_PersonId_Person_Id] FOREIGN KEY ([PersonId]) REFERENCES [Person].[Person] ([Id]);


GO
PRINT N'Creating FK_Customer_SalespersonId_Salesperson_Id...';


GO
ALTER TABLE [Person].[Customer]
    ADD CONSTRAINT [FK_Customer_SalespersonId_Salesperson_Id] FOREIGN KEY ([SalespersonId]) REFERENCES [Person].[Salesperson] ([Id]);


GO
PRINT N'Creating FK_Salesperson_PersonId_Person_Id...';


GO
ALTER TABLE [Person].[Salesperson]
    ADD CONSTRAINT [FK_Salesperson_PersonId_Person_Id] FOREIGN KEY ([PersonId]) REFERENCES [Person].[Person] ([Id]);


GO
PRINT N'Creating FK_Opportunity_CustomerId_Customer_Id...';


GO
ALTER TABLE [Sales].[Opportunity]
    ADD CONSTRAINT [FK_Opportunity_CustomerId_Customer_Id] FOREIGN KEY ([CustomerId]) REFERENCES [Person].[Customer] ([Id]);


GO
PRINT N'Creating FK_Opportunity_VehicleId_Vehicle_Id...';


GO
ALTER TABLE [Sales].[Opportunity]
    ADD CONSTRAINT [FK_Opportunity_VehicleId_Vehicle_Id] FOREIGN KEY ([VehicleId]) REFERENCES [Inventory].[Vehicle] ([Id]);


GO
PRINT N'Creating FK_Opportunity_OpportunityTypeId_OpportunityType_Id...';


GO
ALTER TABLE [Sales].[Opportunity]
    ADD CONSTRAINT [FK_Opportunity_OpportunityTypeId_OpportunityType_Id] FOREIGN KEY ([OpportunityTypeId]) REFERENCES [Sales].[OpportunityType] ([Id]);


GO
PRINT N'Creating CK_Person_ValidateAge...';


GO
ALTER TABLE [Person].[Person]
    ADD CONSTRAINT [CK_Person_ValidateAge] CHECK (DATEDIFF(YEAR,[Birthdate],GETDATE()) >= 18);


GO
PRINT N'Creating [Inventory].[vw_Vehicles]...';


GO
CREATE VIEW [Inventory].[vw_Vehicles]
	AS 

	SELECT 
		v.Id AS VehicleId,
		m.Name AS Make,
		mo.Name AS Model,
		c.Name AS Color
	FROM Inventory.Vehicle AS v
	INNER JOIN Inventory.Make AS m
		ON m.Id = v.MakeId
	INNER JOIN Inventory.Model AS mo
		ON mo.Id = v.ModelId
	INNER JOIN Inventory.Color AS c
		ON c.Id = v.ColorId
GO
PRINT N'Creating [Person].[vw_Customers]...';


GO
CREATE VIEW [Person].[vw_Customers]
	AS

	SELECT Per.FName AS FirstName,
		   Per.LName AS LastName
    FROM Person.Customer AS Cust
	INNER JOIN Person.Person AS Per
		ON Cust.PersonId = Per.Id
GO
PRINT N'Creating [Sales].[usp_OpportunitiesByType]...';


GO
CREATE PROCEDURE [Sales].[usp_OpportunitiesByType]	@OpportunityType NVARCHAR(55)

AS

SELECT o.id,
	   o.CustomerId
FROM Sales.Opportunity AS o
INNER JOIN Sales.OpportunityType AS ot
	ON o.OpportunityTypeId = ot.Id
	WHERE ot.Name = @OpportunityType
GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
